from typing import Optional, Literal

from pydantic import Field
from zerolan.data.pipeline.abs_data import AbstractModelQuery, AbstractModelPrediction


class TTSQuery(AbstractModelQuery):
    """
    Represents a Text-to-Speech (TTS) query.
    """
    text: str = Field(..., description="The text to be converted to speech.")
    text_language: str = Field(..., description="The language of the input text.")
    refer_wav_path: str = Field(..., description="Path to the reference WAV file.")
    prompt_text: str = Field(..., description="Text for the reference WAV file.")
    prompt_language: str = Field(..., description="The language of the prompt text.")
    cut_punc: Optional[str] = Field(default="，。", description="Use to split the sentences.")
    audio_type: Literal["raw", "ogg", "wav"] = Field(default="ogg", description="The type of audio to be generated.")


class TTSPrediction(AbstractModelPrediction):
    """
    Represents a Text-to-Speech (TTS) result.
    """
    wave_data: bytes = Field(..., description="The raw audio data produced by the TTS model.")
    audio_type: str = Field(..., description="The format or type of the audio data.")


class TTSStreamPrediction(AbstractModelPrediction):
    """
    Represents a stream Text-to-Speech (TTS) result.

    This class encapsulates the output of a TTS model in a streaming format,
    allowing for real-time processing and playback of synthesized speech.
    Each instance of this class corresponds to a single segment of audio data
    generated by the TTS model, along with metadata indicating the sequence
    number and whether the segment is the final one in the stream.

    [!Note]:
        The wave_data attribute should be handled carefully, as it contains binary data.
        Ensure proper decoding and playback mechanisms are in place when working with this attribute.
    """
    seq: int = Field(...,
                     description="The sequence number of this prediction object, indicating its position within the overall TTS stream. \n"
                                 "This allows for proper ordering and synchronization of audio segments.")
    is_final: bool = Field(...,
                           description="A flag indicating whether this prediction object represents the final segment of the TTS stream. \n"
                                       "If True, it signifies that no more audio data will follow.")
    wave_data: bytes = Field(..., description="The raw audio data generated by the TTS model for this segment. \n"
                                              "This is typically in the form of a byte stream representing the waveform of the synthesized speech.")
    audio_type: str = Field(..., description="The format or type of the audio data contained in wave_data. \n"
                                             "This could be a specific codec or container format, such as `wav`, `ogg`, or `raw`, which determines how the audio should be processed and played back.")
