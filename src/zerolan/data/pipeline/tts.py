from typing import Optional, Literal

from zerolan.data.pipeline.abs_data import AbstractModelQuery, AbstractModelPrediction


class TTSQuery(AbstractModelQuery):
    """
    Represents a Text-to-Speech (TTS) query.

    Attributes:
        text: The text to be converted to speech.
        text_language: The language of the input text.
        refer_wav_path: Path to the reference WAV file.
        prompt_text: Text for the reference WAV file.
        prompt_language: The language of the prompt text.
        cut_punc: Use to split the sentences.
    """
    text: str
    text_language: str
    refer_wav_path: str
    prompt_text: str
    prompt_language: str
    cut_punc: Optional[str] = "，。"
    audio_type: Literal["raw", "ogg", "wav"] = "raw"


class TTSPrediction(AbstractModelPrediction):
    """
    Represents a Text-to-Speech (TTS) result.

    Attributes:
        wave_data: The raw audio data produced by the TTS model.
    """
    wave_data: bytes
    audio_type: str


class TTSStreamPrediction(AbstractModelPrediction):
    """
    Represents a stream Text-to-Speech (TTS) result.

    This class encapsulates the output of a TTS model in a streaming format,
    allowing for real-time processing and playback of synthesized speech.
    Each instance of this class corresponds to a single segment of audio data
    generated by the TTS model, along with metadata indicating the sequence
    number and whether the segment is the final one in the stream.

    Attributes:
        seq (int): The sequence number of this prediction object, indicating
            its position within the overall TTS stream. This allows for
            proper ordering and synchronization of audio segments.
        is_final (bool): A flag indicating whether this prediction object
            represents the final segment of the TTS stream. If True, it
            signifies that no more audio data will follow.
        wave_data (bytes): The raw audio data generated by the TTS model for
            this segment. This is typically in the form of a byte stream
            representing the waveform of the synthesized speech.
        audio_type (str): The format or type of the audio data contained in
            wave_data. This could be a specific codec or container format,
            such as "wav", "ogg", or "raw", which determines how the audio
            should be processed and played back.

    Note:
        The wave_data attribute should be handled carefully, as it contains
        raw binary data. Ensure proper decoding and playback mechanisms are
        in place when working with this attribute.

    See Also:
        AbstractModelPrediction: The parent class from which this class
            inherits, providing a common interface for model prediction
            objects.
    """
    seq: int
    is_final: bool
    wave_data: bytes
    audio_type: str
